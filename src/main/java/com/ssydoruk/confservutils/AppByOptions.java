/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.ssydoruk.confservutils;

import static Utils.swing.Swing.checkBoxSelection;
import static Utils.swing.Swing.restrictHeight;
import com.genesyslab.platform.configuration.protocol.types.CfgAppType;
import java.util.Collection;

/**
 *
 * @author stepan_sydoruk
 */
public class AppByOptions extends javax.swing.JPanel implements ISearchSettings, ISearchCommon {

    /**
     * Creates new form AppByDBID
     */
    public AppByOptions() {
        initComponents();
        Main.loadGenesysTypes(cbApplicationType, CfgAppType.values());
        rbShortOutput.setSelected(true);
        restrictHeight(tfSearchString);
        restrictHeight(tfOption);
        restrictHeight(tfOptionValue);
        restrictHeight(tfSection);
        restrictHeight(tfName);

    }

    @Override
    public boolean isCaseSensitive() {
        return cbCaseSensitive.isSelected();
    }

    @Override
    public boolean isRegex() {
        return cbIsRegex.isSelected();
    }

    @Override
    public boolean isFullOutputSelected() {
        return rbFullOutput.isSelected();
    }

    @Override
    public boolean isAllKVPsInOutput() {
        return false;
    }

    @Override
    public String getObjName() {
        return Utils.swing.Swing.checkBoxSelection(tfName);
    }

    @Override
    public String getAllSearch() {
        return Utils.swing.Swing.checkBoxSelection(tfSearchString);
    }

    /**
     *
     * @return application type if configured or null if all types
     */
    public CfgAppType getSelectedAppType() {
        Object ret = cbApplicationType.getSelectedItem();
        if (ret instanceof CfgObjectTypeMenu) {
            return (CfgAppType) ((CfgObjectTypeMenu) ret).getType();
        } else {
            return null;
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        tpSpecifyParameters = new javax.swing.JTabbedPane();
        jpEverywhere = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        lbSearchString = new javax.swing.JLabel();
        tfSearchString = new javax.swing.JComboBox<>();
        jPanel9 = new javax.swing.JPanel();
        jpParams = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        tfName = new javax.swing.JComboBox<>();
        jPanel3 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        tfSection = new javax.swing.JComboBox<>();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        tfOption = new javax.swing.JComboBox<>();
        jPanel5 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        tfOptionValue = new javax.swing.JComboBox<>();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        cbApplicationType = new javax.swing.JComboBox<>();
        jPanel4 = new javax.swing.JPanel();
        rbFullOutput = new javax.swing.JRadioButton();
        rbShortOutput = new javax.swing.JRadioButton();
        cbIsRegex = new javax.swing.JCheckBox();
        cbCaseSensitive = new javax.swing.JCheckBox();

        setLayout(new javax.swing.BoxLayout(this, javax.swing.BoxLayout.PAGE_AXIS));

        jpEverywhere.setLayout(new java.awt.GridLayout(0, 1));

        jPanel8.setLayout(new javax.swing.BoxLayout(jPanel8, javax.swing.BoxLayout.LINE_AXIS));

        lbSearchString.setText("Search string");
        jPanel8.add(lbSearchString);

        tfSearchString.setEditable(true);
        jPanel8.add(tfSearchString);

        jpEverywhere.add(jPanel8);
        jpEverywhere.add(jPanel9);

        tpSpecifyParameters.addTab("Everywhere", jpEverywhere);

        jpParams.setLayout(new javax.swing.BoxLayout(jpParams, javax.swing.BoxLayout.PAGE_AXIS));

        jPanel6.setLayout(new javax.swing.BoxLayout(jPanel6, javax.swing.BoxLayout.LINE_AXIS));

        jLabel5.setText("app name");
        jPanel6.add(jLabel5);

        tfName.setEditable(true);
        jPanel6.add(tfName);

        jpParams.add(jPanel6);

        jPanel3.setLayout(new javax.swing.BoxLayout(jPanel3, javax.swing.BoxLayout.LINE_AXIS));

        jLabel3.setText("Section");
        jPanel3.add(jLabel3);

        tfSection.setEditable(true);
        jPanel3.add(tfSection);

        jpParams.add(jPanel3);

        jPanel1.setLayout(new javax.swing.BoxLayout(jPanel1, javax.swing.BoxLayout.LINE_AXIS));

        jLabel1.setText("Option name");
        jPanel1.add(jLabel1);

        tfOption.setEditable(true);
        jPanel1.add(tfOption);

        jpParams.add(jPanel1);

        jPanel5.setLayout(new javax.swing.BoxLayout(jPanel5, javax.swing.BoxLayout.LINE_AXIS));

        jLabel4.setText("Option Value");
        jPanel5.add(jLabel4);

        tfOptionValue.setEditable(true);
        jPanel5.add(tfOptionValue);

        jpParams.add(jPanel5);

        tpSpecifyParameters.addTab("Specific attributes", jpParams);

        add(tpSpecifyParameters);

        jPanel2.setLayout(new javax.swing.BoxLayout(jPanel2, javax.swing.BoxLayout.LINE_AXIS));

        jLabel2.setText("Application type");
        jPanel2.add(jLabel2);

        jPanel2.add(cbApplicationType);

        add(jPanel2);

        jPanel4.setLayout(new javax.swing.BoxLayout(jPanel4, javax.swing.BoxLayout.PAGE_AXIS));

        buttonGroup1.add(rbFullOutput);
        rbFullOutput.setText("Print full output");
        jPanel4.add(rbFullOutput);

        buttonGroup1.add(rbShortOutput);
        rbShortOutput.setText("Print abbreviated output");
        jPanel4.add(rbShortOutput);

        cbIsRegex.setText("Regular expression");
        jPanel4.add(cbIsRegex);

        cbCaseSensitive.setText("Case sensitive");
        jPanel4.add(cbCaseSensitive);

        add(jPanel4);
    }// </editor-fold>//GEN-END:initComponents

    @Override
    public String getSection() {
        return Utils.swing.Swing.checkBoxSelection(tfSection);
    }

    @Override
    public String getOption() {
        return Utils.swing.Swing.checkBoxSelection(tfOption);
    }

    @Override
    public String getValue() {
        return Utils.swing.Swing.checkBoxSelection(tfOptionValue);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox<String> cbApplicationType;
    private javax.swing.JCheckBox cbCaseSensitive;
    private javax.swing.JCheckBox cbIsRegex;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JPanel jpEverywhere;
    private javax.swing.JPanel jpParams;
    private javax.swing.JLabel lbSearchString;
    private javax.swing.JRadioButton rbFullOutput;
    private javax.swing.JRadioButton rbShortOutput;
    private javax.swing.JComboBox<String> tfName;
    private javax.swing.JComboBox<String> tfOption;
    private javax.swing.JComboBox<String> tfOptionValue;
    private javax.swing.JComboBox<String> tfSearchString;
    private javax.swing.JComboBox<String> tfSection;
    private javax.swing.JTabbedPane tpSpecifyParameters;
    // End of variables declaration//GEN-END:variables

    @Override
    public boolean isSearchAll() {
        return tpSpecifyParameters.getSelectedIndex() == 0;
    }

    @Override
    public String getSearchSummary() {
        StringBuilder buf = new StringBuilder();
        buf.append("App by options; ");
        if (getSelectedAppType() != null) {
            buf.append("app type [").append(getSelectedAppType()).append("]");

        }

        if (isSearchAll()) {
            buf.append(" term [").append(getAllSearch()).append("] in all fields");
        } else {
            buf.append("name [").append(getObjName()).append("] section [").append(getSection()).append("] option [").append(getOption());
        }
        buf.append(" rx[").append(isRegex() ? "yes" : "no").append("]");
        buf.append(" CaSe[").append(isCaseSensitive() ? "yes" : "no").append("]");
        buf.append("; ").append(isFullOutputSelected() ? "full" : "short").append(" output");

        return buf.toString();
    }

    @Override
    public void setChoices(Collection<String> choices) {
        Utils.swing.Swing.setChoices(tfSearchString, choices);
        Utils.swing.Swing.setChoices(tfSection, choices);
        Utils.swing.Swing.setChoices(tfOption, choices);
        Utils.swing.Swing.setChoices(tfOptionValue, choices);
        Utils.swing.Swing.setChoices(tfName, choices);

    }

    @Override
    public Collection<String> getChoices() {
        return (isSearchAll())
                ? Utils.swing.Swing.getChoices(tfSearchString)
                : Utils.swing.Swing.getChoices(
                        tfOption,
                        tfOptionValue,
                        tfSection,
                        tfName);
    }

}
