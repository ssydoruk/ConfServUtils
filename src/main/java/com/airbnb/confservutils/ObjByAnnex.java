/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.airbnb.confservutils;

import com.genesyslab.platform.commons.GEnum;
import com.genesyslab.platform.configuration.protocol.types.CfgDNType;
import com.genesyslab.platform.configuration.protocol.types.CfgObjectType;
import com.genesyslab.platform.configuration.protocol.types.CfgScriptType;
import com.genesyslab.platform.configuration.protocol.types.CfgTransactionType;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.util.Collection;
import javax.swing.AbstractButton;
import javax.swing.ButtonModel;
import org.apache.commons.lang3.StringUtils;
import org.apache.logging.log4j.Logger;

/**
 *
 * @author stepan_sydoruk
 */
public class ObjByAnnex extends javax.swing.JPanel implements ISearchSettings, ISearchCommon {

    /**
     * Creates new form AppByDBID
     */
    public ObjByAnnex() {
        initComponents();
        Main.loadGenesysTypes(cbObjectType, CfgObjectType.values());

        cbObjectType.addItemListener(new ItemListener() {
            @Override
            public void itemStateChanged(ItemEvent e) {
                if (e.getStateChange() == ItemEvent.SELECTED) {
                    cbObjectTypeChanged(e.getItem());
                }
            }

        });

        cbObjectType.getModel().setSelectedItem(Main.anyType);
        rbShortOutput.setSelected(true);
        cbCaseSensitive.setSelected(false);

        jrbEverywhere.addItemListener(new ItemListener() {
            @Override
            public void itemStateChanged(ItemEvent e) {

                AbstractButton aButton = (AbstractButton) e.getSource();
                ButtonModel aModel = aButton.getModel();

                jrbEverywhereSelected(aButton.getModel().isSelected());

            }
        });
        jrbEverywhere.setSelected(true);

    }

    private void jrbEverywhereSelected(boolean isSelected) {
        setVisible(false);
        tfObjectName.setEnabled(!isSelected);
        lbObjectName.setEnabled(!isSelected);
        tfOption.setEnabled(!isSelected);
        lbOption.setEnabled(!isSelected);
        tfOptionValue.setEnabled(!isSelected);
        lbOptionValue.setEnabled(!isSelected);
        tfSection.setEnabled(!isSelected);
        lbSection.setEnabled(!isSelected);

        lbSearchString.setEnabled(isSelected);
        tfSearchString.setEnabled(isSelected);
        setVisible(true);
    }

    private static final Logger logger = Main.getLogger();

    private void cbObjectTypeChanged(Object item) {
        GEnum t = cfgObjType(item);
        if (t != null) {
            if (t == CfgObjectType.CFGDN) {
                setSubtypeValues(CfgDNType.values());
                return;
            } else if (t == CfgObjectType.CFGScript) {
                setSubtypeValues(CfgScriptType.values());
                return;
            } else if (t == CfgObjectType.CFGTransaction) {
                setSubtypeValues(CfgTransactionType.values());
                return;
            } else {
                logger.info("Not filling subtype for object " + t);
            }
        }
        setSubtypeValues(null);
    }

    public boolean isCaseSensitive() {
        return cbCaseSensitive.isSelected();
    }

    public boolean isRegex() {
        return cbIsRegex.isSelected();
    }

    public boolean isFullOutputSelected() {
        return rbFullOutput.isSelected();
    }

    /**
     *
     * @return application type if configured or null if all types
     */
    public CfgObjectType getSelectedObjType() {
        return (CfgObjectType) cfgObjType(cbObjectType.getSelectedItem());
    }

    /**
     *
     * @return application type if configured or null if all types
     */
    public GEnum getSelectedObjSubType() {
        return cfgObjType(cbObjectSubtype.getSelectedItem());
    }

    private GEnum cfgObjType(Object o) {
        if (o == null || o instanceof String) {
            return null;
        } else {
            return ((CfgObjectTypeMenu) o).getType();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jPanel10 = new javax.swing.JPanel();
        jPanel11 = new javax.swing.JPanel();
        jrbEverywhere = new javax.swing.JRadioButton();
        jrbOnlySelected = new javax.swing.JRadioButton();
        jPanel12 = new javax.swing.JPanel();
        jPanel13 = new javax.swing.JPanel();
        lbSearchString = new javax.swing.JLabel();
        tfSearchString = new javax.swing.JTextField();
        jPanel6 = new javax.swing.JPanel();
        lbObjectName = new javax.swing.JLabel();
        tfObjectName = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        lbSection = new javax.swing.JLabel();
        tfSection = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        lbOption = new javax.swing.JLabel();
        tfOption = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        lbOptionValue = new javax.swing.JLabel();
        tfOptionValue = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        cbObjectType = new javax.swing.JComboBox<>();
        jPanel7 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        cbObjectSubtype = new javax.swing.JComboBox<>();
        jPanel4 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        cbIsRegex = new javax.swing.JCheckBox();
        cbCaseSensitive = new javax.swing.JCheckBox();
        jPanel9 = new javax.swing.JPanel();
        rbFullOutput = new javax.swing.JRadioButton();
        rbShortOutput = new javax.swing.JRadioButton();

        setLayout(new javax.swing.BoxLayout(this, javax.swing.BoxLayout.PAGE_AXIS));

        jPanel10.setBorder(javax.swing.BorderFactory.createTitledBorder("Search range"));
        jPanel10.setLayout(new javax.swing.BoxLayout(jPanel10, javax.swing.BoxLayout.PAGE_AXIS));

        jPanel11.setLayout(new javax.swing.BoxLayout(jPanel11, javax.swing.BoxLayout.LINE_AXIS));

        buttonGroup2.add(jrbEverywhere);
        jrbEverywhere.setText("Everywhere");
        jPanel11.add(jrbEverywhere);

        buttonGroup2.add(jrbOnlySelected);
        jrbOnlySelected.setText("Only below attributes");
        jPanel11.add(jrbOnlySelected);

        jPanel10.add(jPanel11);

        jPanel12.setLayout(new javax.swing.BoxLayout(jPanel12, javax.swing.BoxLayout.PAGE_AXIS));

        jPanel13.setLayout(new javax.swing.BoxLayout(jPanel13, javax.swing.BoxLayout.LINE_AXIS));

        lbSearchString.setText("Search string");
        jPanel13.add(lbSearchString);
        jPanel13.add(tfSearchString);

        jPanel12.add(jPanel13);

        jPanel6.setLayout(new javax.swing.BoxLayout(jPanel6, javax.swing.BoxLayout.LINE_AXIS));

        lbObjectName.setText("Object name");
        jPanel6.add(lbObjectName);
        jPanel6.add(tfObjectName);

        jPanel12.add(jPanel6);

        jPanel3.setLayout(new javax.swing.BoxLayout(jPanel3, javax.swing.BoxLayout.LINE_AXIS));

        lbSection.setText("Section name");
        jPanel3.add(lbSection);
        jPanel3.add(tfSection);

        jPanel12.add(jPanel3);

        jPanel1.setLayout(new javax.swing.BoxLayout(jPanel1, javax.swing.BoxLayout.LINE_AXIS));

        lbOption.setText("Option name");
        jPanel1.add(lbOption);
        jPanel1.add(tfOption);

        jPanel12.add(jPanel1);

        jPanel5.setLayout(new javax.swing.BoxLayout(jPanel5, javax.swing.BoxLayout.LINE_AXIS));

        lbOptionValue.setText("Option Value");
        jPanel5.add(lbOptionValue);
        jPanel5.add(tfOptionValue);

        jPanel12.add(jPanel5);

        jPanel10.add(jPanel12);

        add(jPanel10);

        jPanel2.setLayout(new javax.swing.BoxLayout(jPanel2, javax.swing.BoxLayout.LINE_AXIS));

        jLabel2.setText("Object type");
        jPanel2.add(jLabel2);

        jPanel2.add(cbObjectType);

        add(jPanel2);

        jPanel7.setLayout(new javax.swing.BoxLayout(jPanel7, javax.swing.BoxLayout.LINE_AXIS));

        jLabel6.setText("Object subtype");
        jPanel7.add(jLabel6);

        jPanel7.add(cbObjectSubtype);

        add(jPanel7);

        jPanel4.setLayout(new javax.swing.BoxLayout(jPanel4, javax.swing.BoxLayout.LINE_AXIS));

        jPanel8.setLayout(new javax.swing.BoxLayout(jPanel8, javax.swing.BoxLayout.PAGE_AXIS));

        cbIsRegex.setText("Regular expression");
        jPanel8.add(cbIsRegex);

        cbCaseSensitive.setText("Case sensitive");
        jPanel8.add(cbCaseSensitive);

        jPanel4.add(jPanel8);

        jPanel9.setLayout(new javax.swing.BoxLayout(jPanel9, javax.swing.BoxLayout.PAGE_AXIS));

        buttonGroup1.add(rbFullOutput);
        rbFullOutput.setText("Print full output");
        jPanel9.add(rbFullOutput);

        buttonGroup1.add(rbShortOutput);
        rbShortOutput.setText("Print abbreviated output");
        jPanel9.add(rbShortOutput);

        jPanel4.add(jPanel9);

        add(jPanel4);
    }// </editor-fold>//GEN-END:initComponents

    @Override
    public String getSection() {
        return StringUtils.stripToNull(tfSection.getText());
    }

    @Override
    public String getObjName() {
        if (!isSearchAll()) {
            return StringUtils.stripToNull(tfObjectName.getText());
        } else {
            return null;
        }
    }

    @Override
    public String getOption() {
        return StringUtils.stripToNull(tfOption.getText());
    }

    @Override
    public String getValue() {
        return StringUtils.stripToNull(tfOptionValue.getText());
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JCheckBox cbCaseSensitive;
    private javax.swing.JCheckBox cbIsRegex;
    private javax.swing.JComboBox<String> cbObjectSubtype;
    private javax.swing.JComboBox<String> cbObjectType;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JRadioButton jrbEverywhere;
    private javax.swing.JRadioButton jrbOnlySelected;
    private javax.swing.JLabel lbObjectName;
    private javax.swing.JLabel lbOption;
    private javax.swing.JLabel lbOptionValue;
    private javax.swing.JLabel lbSearchString;
    private javax.swing.JLabel lbSection;
    private javax.swing.JRadioButton rbFullOutput;
    private javax.swing.JRadioButton rbShortOutput;
    private javax.swing.JTextField tfObjectName;
    private javax.swing.JTextField tfOption;
    private javax.swing.JTextField tfOptionValue;
    private javax.swing.JTextField tfSearchString;
    private javax.swing.JTextField tfSection;
    // End of variables declaration//GEN-END:variables

    private void setSubtypeValues(Collection values) {
        Main.loadGenesysTypes(cbObjectSubtype, values);

    }

    @Override
    public boolean isSearchAll() {
        return jrbEverywhere.isSelected();
    }

    @Override
    public String getAllSearch() {
        return StringUtils.stripToNull(tfSearchString.getText());

    }

    @Override
    public String getSearchSummary() {
        StringBuilder buf = new StringBuilder();
        buf.append("Object by Annex;");
        if (getSelectedObjType() != null) {
            buf.append(" type [").append(getSelectedObjType()).append("]");
        }
        if (getSelectedObjSubType() != null) {
            buf.append(" subtype [").append(getSelectedObjSubType()).append("]");
        }

        if (isSearchAll()) {
            buf.append(" term \"").append(getAllSearch()).append("\" in all fields, including object attributes");
        } else {
            if (getObjName() != null) {
                buf.append(" name [")
                        .append(getObjName())
                        .append("]");
            }
            if (getSection() != null) {
                buf.append(" section [")
                        .append(getSection())
                        .append("]");
            }
            if (getOption() != null) {
                buf.append(" option [")
                        .append(getOption())
                        .append("]");
            }
            if (getValue() != null) {
                buf.append(" value [")
                        .append(getValue())
                        .append("]");
            }
        }
        buf.append(" rx[").append(isRegex() ? "yes" : "no").append("]");
        buf.append(" CaSe[").append(isCaseSensitive() ? "yes" : "no").append("]");
        buf.append("; ").append(isFullOutputSelected() ? "full" : "short").append(" output");

        return buf.toString();
    }

}
